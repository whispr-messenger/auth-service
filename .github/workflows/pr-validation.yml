name: Pull Request Validation

on:
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write
  security-events: write
  packages: read
  checks: write

env:
  NODE_VERSION: '18'

jobs:
  # ================================
  # Reuse existing modular workflows
  # ================================
  tests:
    name: Run Tests & Quality
    uses: ./.github/workflows/workflow-tests.yml
    with:
      ref: ${{ github.head_ref }}
      should_deploy: 'false'  # Never deploy from PR

  security:
    name: Security Analysis
    needs: tests
    uses: ./.github/workflows/workflow-security.yml
    with:
      ref: ${{ github.head_ref }}
      should_deploy: 'false'  # Never deploy from PR

  # Note: Docker workflow runs but won't push (should_deploy: false)
  docker:
    name: Docker Build (No Push)
    needs: [tests, security]
    if: success()
    uses: ./.github/workflows/workflow-docker.yml
    with:
      ref: ${{ github.head_ref }}
      should_deploy: 'false'  # This prevents push but allows build testing

  # ================================
  # PR-specific summary
  # ================================
  pr-summary:
    name: PR Summary
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    needs: [tests, security, docker]
    if: always()
    
    steps:
      - name: Comment PR
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: actions/github-script@v7
        with:
          script: |
            const testsStatus = '${{ needs.tests.result }}';
            const securityStatus = '${{ needs.security.result }}';
            const dockerStatus = '${{ needs.docker.result }}';
            
            let summary = `## 🔍 PR Validation Summary #${{ github.event.number }}\n\n`;
            
            summary += `### ✅ Tests & Quality\n`;
            summary += `- **Status**: ${testsStatus === 'success' ? '✅ Success' : '❌ Failed'}\n`;
            summary += `- Linting, formatting, unit tests, e2e tests\n\n`;
            
            summary += `### 🔒 Security Analysis\n`;
            summary += `- **Status**: ${securityStatus === 'success' ? '✅ Success' : (securityStatus === 'failure' ? '❌ Failed' : '⏭️ Skipped')}\n`;
            summary += `- Trivy filesystem scan, npm audit, security patterns\n\n`;
            
            summary += `### 🐳 Docker Build\n`;
            summary += `- **Status**: ${dockerStatus === 'success' ? '✅ Success' : (dockerStatus === 'failure' ? '❌ Failed' : '⏭️ Skipped')}\n`;
            summary += `- Docker build test (no push to registry)\n\n`;
            
            summary += `### 📊 SonarQube Analysis\n`;
            summary += `- **Status**: ⏭️ Skipped (Community Edition - Main branch only)\n`;
            summary += `- Quality analysis will run when PR is merged to main\n\n`;
            
            const allSuccess = testsStatus === 'success' && securityStatus === 'success' && dockerStatus === 'success';
            const anyFailed = testsStatus === 'failure' || securityStatus === 'failure' || dockerStatus === 'failure';
            
            if (allSuccess) {
              summary += `### 🎉 This PR is ready to merge!\n`;
              summary += `All checks passed. The full CI/CD pipeline with deployment will run on merge to main.\n`;
            } else if (anyFailed) {
              summary += `### ⚠️ This PR requires fixes before merge\n`;
              summary += `Please review the failed checks and fix the issues.\n`;
            } else {
              summary += `### ⏳ Some checks are still running...\n`;
              summary += `Please wait for all checks to complete.\n`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: Log summary for fork PRs
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: |
          echo "📋 PR Validation Summary for fork PR #${{ github.event.number }}"
          echo "✅ Tests & Quality: ${{ needs.tests.result }}"
          echo "🔒 Security analysis: ${{ needs.security.result }}"
          echo "🐳 Docker build: ${{ needs.docker.result }}"
          echo "📊 SonarQube: Skipped (Community Edition - Main branch only)"
          echo ""
          echo "Note: Cannot comment on fork PRs due to security restrictions."
          echo "Check the workflow logs for detailed validation results."