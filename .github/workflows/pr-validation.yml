name: Pull Request Validation

on:
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write

env:
  NODE_VERSION: '18'

jobs:
  # ================================
  # Quick validation for PRs
  # ================================
  pr-validation:
    name: PR Quick Validation
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check code formatting
        run: npx prettier --check "src/**/*.ts" "test/**/*.ts"

      - name: Run linting
        run: npm run lint

      - name: Type checking
        run: npx tsc --noEmit

      - name: Run unit tests
        run: npm run test

      - name: Build check
        run: npm run build

      - name: Docker build test (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: auth-service:pr-${{ github.event.number }}

  # ================================
  # SonarQube analysis for PRs
  # ================================
  sonarqube-pr:
    name: SonarQube PR Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: pr-validation
    if: github.event.pull_request.head.repo.full_name == github.repository
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:cov

      # Note: SonarQube Community Edition only supports main branch analysis
      # SonarQube analysis will run when PR is merged to main

  # ================================
  # Summary comment
  # ================================
  pr-summary:
    name: PR Summary
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    needs: [pr-validation]
    if: always()
    
    steps:
      - name: Comment PR
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: actions/github-script@v7
        with:
          script: |
            const validationStatus = '${{ needs.pr-validation.result }}';
            
            let summary = `## üîç PR Validation Summary #${{ github.event.number }}\n\n`;
            
            summary += `### ‚úÖ Basic Validation\n`;
            summary += `- **Status**: ${validationStatus === 'success' ? '‚úÖ Success' : '‚ùå Failed'}\n`;
            summary += `- Format, lint, unit tests, build\n\n`;
            
            summary += `### üìä SonarQube Analysis\n`;
            summary += `- **Status**: ‚è≠Ô∏è Skipped (Community Edition - Main branch only)\n`;
            summary += `- Quality analysis will run when PR is merged to main\n\n`;
            
            if (validationStatus === 'success') {
              summary += `### üéâ This PR is ready to merge!\n`;
            } else {
              summary += `### ‚ö†Ô∏è This PR requires fixes before merge\n`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: Log summary for fork PRs
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: |
          echo "üìã PR Validation Summary for fork PR #${{ github.event.number }}"
          echo "‚úÖ Basic validation: ${{ needs.pr-validation.result }}"
          echo "üìä SonarQube: Skipped (Community Edition - Main branch only)"
          echo ""
          echo "Note: Cannot comment on fork PRs due to security restrictions."
          echo "Check the workflow logs for detailed validation results."