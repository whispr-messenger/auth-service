####################################################################################################
# This GitHub Actions workflow validates Jira integration for pull requests and pushes.
# It checks the PR title, branch name, and commit messages for compliance with Jira ticket formats.
# If the checks pass, it comments on the PR with a link to the Jira ticket.
# Ensure to replace 'your-domain.atlassian.net' with your actual Jira domain.
####################################################################################################
name: Jira Integration Validation

on:
  pull_request:
    types: [opened, edited, synchronize]
  push:
    branches: [main, develop]

jobs:
  validate-jira-integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate PR Title
        if: github.event_name == 'pull_request'
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ ! "$PR_TITLE" =~ ^[A-Z]+-[0-9]+.* ]]; then
            echo "⚫️ Le titre de la PR doit commencer par une clé Jira"
            echo "📋 Titre actuel: $PR_TITLE"
            echo "📋 Format attendu: JRA-123 Description de la PR"
            exit 1
          fi
          echo "⚪️ Titre de PR valide: $PR_TITLE"

      - name: Validate Branch Name
        if: github.event_name == 'pull_request'
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          if [[ ! "$BRANCH_NAME" =~ ^[A-Z]+-[0-9]+-.+ ]]; then
            echo "⚫️ Nom de branche invalide: $BRANCH_NAME"
            echo "📋 Format attendu: JRA-123-description"
            exit 1
          fi
          echo "⚪️ Nom de branche valide: $BRANCH_NAME"

      - name: Validate Commit Messages
        run: |
          # Récupère les commits de la PR ou du push
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            COMMITS=$(git log --format="%s" ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
          else
            COMMITS=$(git log --format="%s" ${{ github.event.before }}..${{ github.event.after }})
          fi

          echo "$COMMITS" | while read -r commit; do
            if [[ ! "$commit" =~ ^[A-Z]+-[0-9]+[[:space:]].+ ]]; then
              echo "⚫️ Commit invalide: $commit"
              echo "📋 Format attendu: JRA-123 Description"
              exit 1
            fi
            echo "⚪️ Commit valide: $commit"
          done

      - name: Extract and Validate Jira Key
        if: github.event_name == 'pull_request'
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          JIRA_KEY=$(echo "$PR_TITLE" | grep -oE '^[A-Z]+-[0-9]+' || echo "")

          if [ -z "$JIRA_KEY" ]; then
            echo "⚫️ Aucune clé Jira trouvée dans le titre"
            exit 1
          fi

          echo "🎫 Clé Jira détectée: $JIRA_KEY"
          echo "JIRA_KEY=$JIRA_KEY" >> $GITHUB_ENV

      - name: Comment PR with Jira Link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const jiraKey = process.env.JIRA_KEY;
            const jiraUrl = 'https://your-domain.atlassian.net/browse/';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🎫 **Ticket Jira associé:** [${jiraKey}](${jiraUrl}${jiraKey})`
            });
