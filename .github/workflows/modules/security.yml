name: Security Analysis

on:
  repository_dispatch:
    types: [run-security]
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      should_deploy:
        required: false
        type: string
        default: 'false'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # ================================
  # Security scanning
  # ================================
  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.event.client_payload.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Audit npm dependencies
        run: npm audit --audit-level=high

      - name: Check for known security issues
        run: |
          echo "üîç Checking for common security patterns..."
          
          # V√©rifier les secrets hardcod√©s
          if grep -r "password\s*=\s*['\"]" src/ --include="*.ts" --include="*.js"; then
            echo "‚ö†Ô∏è Potential hardcoded passwords found"
            exit 1
          fi
          
          # V√©rifier les cl√©s API hardcod√©es
          if grep -r "api[_-]?key\s*=\s*['\"]" src/ --include="*.ts" --include="*.js"; then
            echo "‚ö†Ô∏è Potential hardcoded API keys found"
            exit 1
          fi
          
          echo "‚úÖ Basic security checks passed"

      - name: Trigger Docker workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: run-docker
          client-payload: |
            {
              "ref": "${{ inputs.ref || github.event.client_payload.ref }}",
              "sha": "${{ github.sha }}",
              "should_deploy": "${{ inputs.should_deploy || github.event.client_payload.should_deploy }}"
            }